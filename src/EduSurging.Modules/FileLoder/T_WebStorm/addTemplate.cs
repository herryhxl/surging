// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 16.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace FileLoder.T_WebStorm
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class addTemplate : addTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n<div class=\"panel panel-default\">\r\n    <div class=\"panel-heading font-bold\">\r\n " +
                    "      新增");
            
            #line 9 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((models.Comment==null?"":models.Comment)));
            
            #line default
            #line hidden
            this.Write("方法\r\n    </div>\r\n    <div class=\"panel-body\" ng-controller=\"");
            
            #line 11 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_projectName));
            
            #line default
            #line hidden
            this.Write("Controller\">\r\n        <form class=\"form-horizontal\" name=\"form\">\r\n");
            
            #line 13 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
foreach(var item in models.ColumnsList.Where(t=>t.Virtual==false)){
	var Code=_entityName+item.Code;
	if(item.CodeType=="bool"){
            
            #line default
            #line hidden
            this.Write("\t\t<div class=\"line line-dashed b-b line-lg pull-in\"></div>\r\n            <div clas" +
                    "s=\"form-group\">\r\n                <label class=\"col-sm-2 control-label\">");
            
            #line 18 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("</label>\r\n                <div class=\"col-sm-4\">\r\n                    <input type" +
                    "=\"text\"   name=\"");
            
            #line 20 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" id=\"");
            
            #line 20 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\"   ng-model=\"Model.");
            
            #line 20 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" class=\"form-control\" placeholder=\"");
            
            #line 20 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("\" ");
            
            #line 20 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.IsNull?"":"required"));
            
            #line default
            #line hidden
            this.Write(">\r\n");
            
            #line 21 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
if(item.IsNull){
            
            #line default
            #line hidden
            this.Write("                    <span ng-show=\"form.");
            
            #line 22 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write(".$error.required\" class=\"tipshowcl\" aria-hidden=\"false\">*必填项</span>\r\n");
            
            #line 23 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("                </div>\r\n       </div>\r\n");
            
            #line 26 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}else if(item.EM){
            
            #line default
            #line hidden
            this.Write("\t\t<div class=\"line line-dashed b-b line-lg pull-in\"></div>\r\n            <div clas" +
                    "s=\"form-group\">\r\n                <label class=\"col-sm-2 control-label\">");
            
            #line 29 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("</label>\r\n                <div class=\"col-sm-4\">\r\n                    <select nam" +
                    "e=\"");
            
            #line 31 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" id=\"");
            
            #line 31 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\"   ng-model=\"Model.");
            
            #line 31 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" class=\"form-control\" placeholder=\"");
            
            #line 31 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("\" ");
            
            #line 31 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.IsNull?"":"required"));
            
            #line default
            #line hidden
            this.Write(" >\r\n\t\t\t\t\t\t<option value=\"\" selected=\"selected\" >请选择...</option>\r\n");
            
            #line 33 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
foreach(var em in item.EmodelList){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t<option value=\"");
            
            #line 34 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(em.Attribute));
            
            #line default
            #line hidden
            this.Write("\" >");
            
            #line 34 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(em.Description));
            
            #line default
            #line hidden
            this.Write("</option>\r\n");
            
            #line 35 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t</select>\r\n");
            
            #line 37 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
if(item.IsNull){
            
            #line default
            #line hidden
            this.Write("                    <span ng-show=\"form.");
            
            #line 38 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write(".$error.required\" class=\"tipshowcl\" aria-hidden=\"false\">*必填项</span>\r\n");
            
            #line 39 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("                </div>\r\n       </div>\r\n");
            
            #line 42 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}else if(item.FK){
            
            #line default
            #line hidden
            this.Write("\t\t<tr>\r\n            <td>\r\n                ");
            
            #line 45 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("：\r\n            </td>\r\n            <td>\r\n                <input id=\"");
            
            #line 48 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("Text\" name=\"");
            
            #line 48 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("Text\" validate=\"{required:");
            
            #line 48 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.IsNull?"false":"true"));
            
            #line default
            #line hidden
            this.Write("}\" />\r\n            </td>\r\n        </tr>\r\n");
            
            #line 51 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}else if(item.PK) {
            
            #line default
            #line hidden
            this.Write("\t\t\r\n");
            
            #line 53 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}else {
            
            #line default
            #line hidden
            this.Write("\t\t<tr>\r\n            <td>\r\n                <label for=\"textbox1\">");
            
            #line 56 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name==null?item.Comment==null?"":item.Comment:item.Name));
            
            #line default
            #line hidden
            this.Write("：</label>\r\n            </td>\r\n            <td>\r\n\t\t\t");
            
            #line 59 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"

				var require=item.IsNull?"false":"true";
			
            
            #line default
            #line hidden
            this.Write("                <input  id=\"");
            
            #line 62 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" name=\"");
            
            #line 62 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Code.Replace("?","")));
            
            #line default
            #line hidden
            this.Write("\" type=\"text\" class=\"");
            
            #line 62 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.CodeType=="DateTime"?"ui-datepicker":"ui-textbox"));
            
            #line default
            #line hidden
            this.Write("\" validate=\"{required:");
            
            #line 62 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(require));
            
            #line default
            #line hidden
            this.Write("}\" />\r\n            </td>\r\n        </tr>\r\n");
            
            #line 65 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_WebStorm\addTemplate.tt"
}}
            
            #line default
            #line hidden
            this.Write("\r\n            <div class=\"line line-dashed b-b line-lg pull-in\"></div>\r\n         " +
                    "   <div class=\"form-group\">\r\n                <label class=\"col-sm-2 control-labe" +
                    "l\">方法名</label>\r\n                <div class=\"col-sm-4\">\r\n                    <inp" +
                    "ut type=\"text\"   name=\"ActionName\" id=\"ActionName\"   ng-model=\"Model.ActionName\"" +
                    " class=\"form-control\" placeholder=\"方法名\">\r\n                    <span ng-show=\"for" +
                    "m.ActionName.$error.required\" class=\"tipshowcl\" aria-hidden=\"false\">*必填项</span>\r" +
                    "\n                </div>\r\n            </div>\r\n\r\n            <div class=\"line line" +
                    "-dashed b-b line-lg pull-in\"></div>\r\n            <div class=\"form-group\">\r\n     " +
                    "           <label class=\"col-sm-2 control-label\">描述</label>\r\n                <di" +
                    "v class=\"col-sm-4\">\r\n                    <input type=\"text\"   name=\"Description\"" +
                    " id=\"Description\"   ng-model=\"ActionModels.Description\" class=\"form-control\" pla" +
                    "ceholder=\"描述\">\r\n                    <span ng-show=\"form.Description.$error.requi" +
                    "red\" class=\"tipshowcl\" aria-hidden=\"false\">*必填项</span>\r\n                </div>\r\n" +
                    "            </div>\r\n\r\n            \r\n            <div class=\"line line-dashed b-b" +
                    " line-lg pull-in\"></div>\r\n            <div class=\"form-group\">\r\n                " +
                    "<div class=\"col-sm-4 col-sm-offset-2\">\r\n                    <button ng-click=\"up" +
                    "date()\" type=\"submit\" class=\"btn btn-primary\">保存</button>\r\n                    <" +
                    "button type=\"submit\" ui-sref=\"app.action.list\" class=\"btn btn-default\">取消</butto" +
                    "n>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n<" +
                    "/div>\r\n<script type=\"text/javascript\">\r\n   \r\n</script>\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class addTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
