<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

package <#=_projectName#>.Base;

import android.content.Context;
import <#=_projectName#>.Common.LoadUtil;

import retrofit2.Response;
import rx.Observable;
import rx.functions.Func1;
public class NoneDataTransformer<T extends Response<R>, R extends BaseMsg>
        implements Observable.Transformer<T, BaseMsg> {
    private Context mContext;
    private LoadUtil loading;
    public NoneDataTransformer(final Context context, final LoadUtil loading) {
        this.mContext = context;
        this.loading=loading;
    }
    @Override
    public Observable<BaseMsg> call(Observable<T> observable) {
        return observable
                .compose(new SchedulerTransformer<T>())
                .compose(new ErrorCheckerTransformer<T, R>(mContext,loading))
                .map(new Func1<R, BaseMsg>() {
                    @Override
                    public BaseMsg call(R r) {
						if(loading!=null){
                            loading.dismiss();
                        }
                        return r;
                    }
                });
    }
}