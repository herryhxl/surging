<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Autofac;
using Autofac.Core;
using Edu.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Configuration;
<# foreach(var model in _AllModel){#>
using <#=_projectName#>.ChangeService.<#=model.Code#>;
using <#=_projectName#>.Repository.<#=model.Code#>;
using <#=_projectName#>.Service.<#=model.Code#>;
<#}#>

namespace <#=_projectName#>.Base
{
	public static class <#=_projectName#>Extensions
    {
        public static void Register<#=_projectName#>ModuleDbContext(this IServiceCollection services, IConfiguration Configuration)
        {
            services.AddDbContext<<#=_projectName#>DbContext>(optionsBuilder =>
            {
                var dbContextOptionsBuilder = optionsBuilder.UseLazyLoadingProxies();
<#if(_options.DataBaseType == DataBaseType.MSSQL){#>
                dbContextOptionsBuilder.UseSqlServer(Configuration.GetConnectionString("<#=_projectName#>Connection"));
<#}else if(_options.DataBaseType == DataBaseType.MySql){#>
                dbContextOptionsBuilder.UseMySql(Configuration.GetConnectionString("<#=_projectName#>Connection"));
<#}#>
            });
        }
        public static void Register<#=_projectName#>ModuleService(this ContainerBuilder builder)
        {
<# foreach(var model in _AllModel){#>
            builder.RegisterType<<#=model.Code#>Service>().As<I<#=model.Code#>Service>().InstancePerLifetimeScope();
            builder.RegisterType<<#=model.Code#>ChangeService>().As<I<#=model.Code#>ChangeService>().InstancePerLifetimeScope();
		    builder.RegisterType<<#=model.Code#>Repository>().As<I<#=model.Code#>Repository>().InstancePerLifetimeScope();
<#}#>
        }
    }
}