<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using <#=_projectName#>.Entity;
using <#=_projectName#>.Models;
using <#=_projectName#>.Base;
using Edu.Core.Data;
using Edu.Core.Site;
using Edu.Core.Extend;
using Microsoft.Extensions.Logging;
using <#=_projectName#>.Repository.<#=_entityName#>;

<# var PKData=models.ColumnsList.Where(t=>t.PK==true).FirstOrDefault();
	if(PKData==null) throw new Exception("未包含主键字段");
	var FkData=models.ColumnsList.Where(t=>t.Virtual==false&&t.FK==true&&t.FKTable!=_entityName+"Entity").Select(t => t.FKTable).Distinct();
#>

<# foreach(var model in FkData){
	var item=_AllModels.Where(t=>t.Code==model.Replace("Entity", "")).FirstOrDefault();
	if(item!=null){
		var itemPKData=item.ColumnsList.Where(t=>t.PK==true).FirstOrDefault();
#>
using <#=_projectName#>.Repository.<#=item.Code#>;
<#}}#>

namespace <#=_projectName#>.ChangeService.<#=_entityName#>
{
	public class <#=_entityName#>ChangeService : ChangeService<<#=_entityName#>Entity,<#=PKData.CodeType#>>,I<#=_entityName#>ChangeService
    {
        private readonly I<#=_entityName#>Repository _<#=_entityName.ToLower()#>Repository;
<# foreach(var model in FkData){
	var item=_AllModels.Where(t=>t.Code==model.Replace("Entity", "")).FirstOrDefault();
	if(item!=null){
		var itemPKData=item.ColumnsList.Where(t=>t.PK==true).FirstOrDefault();
#>
		private readonly I<#=item.Code#>Repository _<#=item.Code.ToLower()#>Repository;
<#}}#>
        public <#=_entityName#>ChangeService(I<#=_entityName#>Repository <#=_entityName.ToLower()#>Repository,ILogger<<#=_entityName#>ChangeService> logger,IWorkContext workContext
<# foreach(var model in FkData){
	var item=_AllModels.Where(t=>t.Code==model.Replace("Entity", "")).FirstOrDefault();
	if(item!=null){
		var itemPKData=item.ColumnsList.Where(t=>t.PK==true).FirstOrDefault();
#>
		,I<#=item.Code#>Repository <#=item.Code.ToLower()#>Repository
<#}}#>
		):base(logger)
        {
            _<#=_entityName.ToLower()#>Repository = <#=_entityName.ToLower()#>Repository;
<# foreach(var model in FkData){
	var item=_AllModels.Where(t=>t.Code==model.Replace("Entity", "")).FirstOrDefault();
#>
		_<#=item.Code.ToLower()#>Repository=<#=item.Code.ToLower()#>Repository;
<#}#>
        }


		public override void Add(<#=_entityName#>Entity <#=_entityName.ToLower()#>)
		{
			
		}

		public override void Update(<#=_entityName#>Entity <#=_entityName.ToLower()#>)
		{
				
		}

		public override bool UpdateField<T>(<#=_entityName#>Entity <#=_entityName.ToLower()#>Entity,T OldValue,string FieldName,T Value)
		{
			var Change = OldValue.IsChange(Value);
			if(Change)
			{
				switch (FieldName.ToLower())
				{
<# foreach (var model in models.ColumnsList.Where(t => t.Virtual == false)){#>
					case "<#=model.Code.ToLower()#>":
					
						break;
<#}#>      
				}
			}
			return Change;
		}
		
		public override void Delete(<#=_entityName#>Entity <#=_entityName.ToLower()#>Entity)
		{

		}
    }
}