<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Collections.Generic;
using System.Linq;
namespace <#=_projectName#>.Base
{

	public class <#=_projectName#>_E
    {
		#region 枚举转换方法
        /// <summary>
        /// 枚举转换成List
        /// </summary>
        /// <param name="t"></param>
        /// <returns></returns>
        public static List<EModel> GetListModelEnum(System.Type t)
        {
            List<EModel> l = new List<EModel>();
            Array arr = Enum.GetValues(t);
            for (int i = 0; i < arr.LongLength; i++)
            {
                EModel m = new EModel();
                m.Value = (int)arr.GetValue(i);
                m.Key = Enum.GetName(t, m.Value).StartsWith("_")?Enum.GetName(t, m.Value).Substring(1,Enum.GetName(t, m.Value).Length-1).Replace("_","-"):Enum.GetName(t, m.Value);
                l.Add(m);
            }
            l = l.OrderBy(e => e.Value).ToList();
            return l;
        }
        #endregion
        /// <summary>
        /// 枚举模型
        /// </summary>
        public class EModel
        {
            public string Key { get; set; }
            public int Value { get; set; }
        }
        
<# foreach (var model in _models) { #>
		
        public enum <#=model.EnumName#>
		{
<#var i=1; foreach (var value in model.Values) { #>
		/// <summary>
		/// <#=value.Description #>
		/// </summary>
			<#=value.Description#>=<#=value.Attribute#><#if(i!=model.Values.Count()){#>,
			<#
		} i++; }#>
	}
<# } #>
	}
}
