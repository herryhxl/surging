// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 16.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace FileLoder.T_LigerUI
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ViewTemplate : ViewTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 6 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
 var PKData=models.ColumnsList.Where(t =>t.PK==true).FirstOrDefault();
	if(PKData==null) throw new Exception("未包含主键字段");

            
            #line default
            #line hidden
            this.Write("\r\n@{\r\n     ViewBag.Title = \"");
            
            #line 11 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((models.Comment==null?"":models.Comment)));
            
            #line default
            #line hidden
            this.Write("\";\r\n      Layout = \"~/Areas/Admin/Views/Shared/_layout.cshtml\";\r\n}\r\n<style>\r\n    " +
                    "   body {\r\n       padding: 0 !important;\r\n       margin: 0 !important;\r\n       }" +
                    "\r\n</style>\r\n\r\n<script type=\"text/javascript\">\r\n    var ");
            
            #line 22 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n    $(document).ready(function () {\r\n        $(\"#layout1\").ligerLayout(" +
                    "{\r\n            centerWidth: 700\r\n        });\r\n        ");
            
            #line 27 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(" = $(\"#");
            
            #line 27 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write("\").ligerGrid({\r\n            columns: [\r\n");
            
            #line 29 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
var data=models.ColumnsList.Where(t=>t.Virtual==false&&t.PK!=true).ToList();
	int p=1,Count=data.Count();
	foreach(var model in data){
            
            #line default
            #line hidden
            
            #line 32 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
 if(model.EM){
            
            #line default
            #line hidden
            this.Write("\t\t{ display: \'");
            
            #line 33 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("\', name: \'");
            
            #line 33 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Code+"String"));
            
            #line default
            #line hidden
            this.Write("\', width: 100 }");
            
            #line 33 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p==Count?"":","));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 34 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
}else { var render="";if(model.DataType=="bit") render=", render: readerStatus";else if(model.DataType=="datetime") render=", render: ChangeDateFormat2"; 
            
            #line default
            #line hidden
            this.Write("\t\t{ display: \'");
            
            #line 35 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("\', name: \'");
            
            #line 35 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Code));
            
            #line default
            #line hidden
            this.Write("\', width: 100 ");
            
            #line 35 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(render));
            
            #line default
            #line hidden
            this.Write(" }");
            
            #line 35 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p==Count?"":","));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 36 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
}p++;}
            
            #line default
            #line hidden
            this.Write("            ],\r\n            pageSize: 30,\r\n            url: common.AppUrl(\"/Api/");
            
            #line 39 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(@"/GetListData""),
            width: '100%',
            height: '100%',
            root: ""Records"",
            record: ""TotalCount"",
            pagesizeParmName: ""PageCount"",
            pageParmName: ""Page"",
            dateFormat: """",
            checkbox: true,
			frozen:true,
            toolbar: {
                items: [
                    {
                        text: '新增', click: function () {
                            common.showTopDialog({
                                url: '/Admin/Admin");
            
            #line 54 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write("/Edit\',\r\n                                title: \"新增");
            
            #line 55 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((models.Comment==null?"":models.Comment)));
            
            #line default
            #line hidden
            this.Write("\",\r\n                                saveSuccess: function (dataObj) {\r\n          " +
                    "                          ");
            
            #line 57 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(@".reload();
                                }
                            });
                        }, icon: 'add'
                    },
                    {
                        text: '编辑', click: function () {
                            var ");
            
            #line 64 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(" = GetSelect();\r\n\t\t\t\t\t\t\tif(");
            
            #line 65 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("==null)\r\n\t\t\t\t\t\t\t\treturn;\r\n                            common.showTopDialog({\r\n   " +
                    "                             url: \'/Admin/Admin");
            
            #line 68 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write("/Edit?");
            
            #line 68 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("=\'+");
            
            #line 68 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(",\r\n                                title: \"编辑");
            
            #line 69 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((models.Comment==null?"":models.Comment)));
            
            #line default
            #line hidden
            this.Write("\",\r\n                                saveSuccess: function (dataObj) {\r\n          " +
                    "                          ");
            
            #line 71 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(@".reload();
                                }
                            });
                        }, icon: 'ok'
                    },
                    { line: true },
                    {
                        text: '删除', click: function () {
							var ");
            
            #line 79 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 79 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(".getSelecteds();\r\n\t\t\t\t\t\t\tif(");
            
            #line 80 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(".length==0)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcommon.showTopTip(\"请先选择行再操作。\");\r\n\t\t\t\t\t\t\t\treturn;\r\n" +
                    "\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar ");
            
            #line 85 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("List=[];\r\n\t\t\t\t\t\t\tfor(var item in ");
            
            #line 86 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("){\r\n\t\t\t\t\t\t\t\t");
            
            #line 87 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("List.push(");
            
            #line 87 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("[item].");
            
            #line 87 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t}   \r\n                            common.ask({\r\n                      " +
                    "          msg: \"确定删除吗？\", yes: function () {\r\n                                   " +
                    " common.Ajax({\r\n                                        url: \"/Api/");
            
            #line 92 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write("/RemoveList\",\r\n\t\t\t\t\t\t\t\t\t\tdata:{\"\":");
            
            #line 93 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write("List},\r\n                                        afterAjaxSuccessHandler: function" +
                    " (data) {\r\n                                            ");
            
            #line 95 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(@".reload();
                                        }
                                    });
                                }
                            });
                        }, icon: 'delete'
                    }
                ]
            }

        });
        $(document.body).keydown(function (e) {
            if (e.keyCode == 13) {
                $(""#Search"").click();
            }
        });
        $(""#Search"").click(function () {
            ");
            
            #line 112 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(".set(\'parms\', { KeyNO: $(\"#KeyNOText\").val(), LoginName: $(\"#LoginName\").val(), S" +
                    "tatus: $(\"#Status\").val() });\r\n            ");
            
            #line 113 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(".changePage(\"first\");\r\n            ");
            
            #line 114 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(".reload();\r\n        });\r\n        function GetSelect() {\r\n            var selected" +
                    "Row = ");
            
            #line 117 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write(".getSelectedRow();\r\n            if (selectedRow == null) {\r\n                commo" +
                    "n.showTopTip(\"请先选择行再操作。\");\r\n                return null;\r\n            }\r\n       " +
                    "     else {\r\n               return selectedRow.");
            
            #line 123 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PKData.Code));
            
            #line default
            #line hidden
            this.Write(";\r\n            }\r\n        }\r\n    });\r\n</script>\r\n<div id=\"layout1\">\r\n      <div p" +
                    "osition=\"center\" title=\"");
            
            #line 129 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((models.Comment==null?" ":models.Comment)));
            
            #line default
            #line hidden
            this.Write(@""">
           <div style=""padding:5px;"">
             软件序列号：<input id=""KeyNOText"" type=""text"">
             用户名：<input id=""LoginName"" type=""text"">
             <select id=""Status"">
                  <option value="""">不限</option>
                  <option value=""true"">启用</option>
                  <option value=""false"">禁用</option>
             </select>
             <input id=""Search"" type=""button"" value=""搜索"">
           </div>
       <div id=""");
            
            #line 140 "E:\JiTuan_Project\TepCloud\DotNetCode\Current\FileLoder\T_LigerUI\ViewTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(_entityName));
            
            #line default
            #line hidden
            this.Write("\"></div>\r\n     </div>\r\n</div>\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class ViewTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
