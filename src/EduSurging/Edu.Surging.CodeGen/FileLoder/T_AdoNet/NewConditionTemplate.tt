<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="FileLoder.TemplateModel" #>
<# var orderName =new List<string>(); #>
<# var nullableType = new []{"int","bool","float","double","decimal","Int32","char","DateTime"}; #>
using System;

namespace <#=_projectName#>.Model
{
	public class <#=_entityName#>SearchCondition
	{
		/// <summary>
		/// 页码
		/// </summary>
		public int? Page { get; set; }

		/// <summary>
		/// 每页大小
		/// </summary>
		public int? PageCount { get; set; }

		/// <summary>
		/// 是否降序
		/// </summary>
		public bool IsDescending { get; set; }

<# foreach(var model in _models.Where(t=>t.Virtual==false)){
	if(model.OrderBy) {
	  orderName.Add(model.Code);
	}
	if(model.Search == EnumSearchType.In){ #>
		public <#=model.CodeType #>[] <#=model.Code#>s { get; set; }
<#} else if (model.Search == EnumSearchType.Like) {#>
		public <#=model.CodeType #><#=(nullableType.Contains(model.CodeType) || model.EM)?"?":""#> <#=model.Code#> { get; set; }
<#} else if (model.Search == EnumSearchType.Equal) {#>
		public <#=model.CodeType #><#=(nullableType.Contains(model.CodeType) || model.EM)?"?":""#> <#=model.Code#> { get; set; }
<#}else if (model.Search == EnumSearchType.Range) {#>
		public <#=model.CodeType #><#=(nullableType.Contains(model.CodeType) || model.EM)?"?":""#> <#=model.Code#>Begin { get; set; }

		public <#=model.CodeType #><#=(nullableType.Contains(model.CodeType) || model.EM)?"?":""#> <#=model.Code#>End { get; set; }
<#}}#>
<# if(orderName.Count() >0){ #>
		public Enum<#=_entityName#>SearchOrderBy? OrderBy { get; set; }
<#}#>
	}

<# if(orderName.Count() >0){ #>
	public enum Enum<#=_entityName#>SearchOrderBy
	{
<# foreach(var name in orderName) {#>
		OrderBy<#=name#>,
<#}#>
	}
<#}#>
}