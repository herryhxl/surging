<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

package <#=_projectName#>.Base;
import android.content.Context;
import android.content.SharedPreferences;
import android.util.Log;

import com.example.yunjoy.Model.CookieModel;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;

import okhttp3.Interceptor;
import okhttp3.Request;
import okhttp3.Response;
import rx.Observable;
import rx.functions.Action1;

public class AddCookiesInterceptor implements Interceptor {
    private Context context;

    public AddCookiesInterceptor(Context context) {
        super();
        this.context = context;

    }

    @Override
    public Response intercept(Chain chain) throws IOException {
        final Request.Builder builder = chain.request().newBuilder();
        SharedPreferences sharedPreferences = context.getSharedPreferences("cookie", Context.MODE_PRIVATE);
        String Cookie = sharedPreferences.getString("cookie", "");
        StringBuffer bu = new StringBuffer();
        List<CookieModel> CookieData = new ArrayList<CookieModel>();
        if (!Cookie.equals("")) {
            //Log.i("yunjoy", "读取Cookie:" + Cookie);
            Gson gson = new Gson();
            Type type = new TypeToken<List<CookieModel>>() {
            }.getType();
            CookieData = gson.fromJson(Cookie, type);
            for (CookieModel item : CookieData) {
                bu.append(item.getValue() + ";");
            }
            Cookie = bu.toString();
        } else {
            Cookie = "";
        }
        builder.addHeader("Cookie", Cookie);
        return chain.proceed(builder.build());
    }
}
